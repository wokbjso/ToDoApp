{"version":3,"sources":["colors.js","App.js"],"names":["theme","windowHeight","Dimensions","get","height","App","useState","working","setWorking","text","setText","toDos","setTodos","useEffect","loadToDos","saveToDos","toSave","jsonValue","JSON","stringify","AsyncStorage","setItem","s","getItem","parse","addToDo","newToDos","Date","now","deleteToDo","id","View","style","styles","container","StatusBar","header","TouchableOpacity","onPress","Text","btnText","color","TextInput","value","placeholder","input","onChangeText","payload","onSubmitEditing","returnKeyType","ScrollView","Object","keys","map","key","toDo","toDoText","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","fontSize","fontWeight","paddingVertical","borderRadius","marginVertical","alignItems","marginBottom"],"mappings":"iQAAaA,EACN,QADMA,EAEJ,U,+kBCcT,IACMC,EAAeC,UAAWC,IAAI,UAAUC,OAE/B,SAASC,IACtB,MAA2BC,oBAAS,GAApC,WAAOC,EAAP,KAAeC,EAAf,KACA,EAAqBF,mBAAS,IAA9B,WAAOG,EAAP,KAAYC,EAAZ,KACA,EAAuBJ,mBAAS,IAAhC,WAAOK,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACRC,MACA,IACF,IAGMC,EAAU,WAAD,WAAC,UAAOC,GACrB,IAAMC,EAAYC,KAAKC,UAAUH,SAC3BI,UAAaC,QAfL,SAe0BJ,MAF3B,mDAAC,GAIVH,EAAU,WAAD,WAAC,YACd,IAAMQ,QAAUF,UAAaG,QAlBf,UAmBXD,GACDV,EAASM,KAAKM,MAAMF,OAHT,kDAAC,GAMVG,EAAQ,WAAD,WAAC,YACZ,GAAU,KAAPhB,EAAH,CAGA,IAAMiB,EAAS,EAAD,KAAKf,GAAL,UAAYgB,KAAKC,MAAO,CAACnB,OAAKF,aAC5CK,EAASc,SACHX,EAAUW,GAChBhB,EAAQ,QAPG,kDAAC,GASRmB,EAAW,WAAD,WAAC,UAAMC,GACrB,IAAMJ,EAAS,EAAD,GAAKf,UACZe,EAASI,GAChBlB,EAASc,SACHX,EAAUW,MAJF,mDAAC,GAMjB,OACE,eAACK,EAAA,QAAD,CAAMC,MAAOC,EAAOC,UAApB,UACE,cAACC,EAAA,UAAD,CAAWH,MAAM,SACjB,eAACD,EAAA,QAAD,CAAMC,MAAOC,EAAOG,OAApB,UACE,cAACC,EAAA,QAAD,CAAkBC,QA/Bb,kBAAI9B,GAAW,IA+BpB,SACA,cAAC+B,EAAA,QAAD,CAAMP,MAAK,OAAMC,EAAOO,SAAb,IACTC,MAAMlC,EAAU,QAAUP,IAD5B,oBAGA,cAACqC,EAAA,QAAD,CAAkBC,QApCX,kBAAI9B,GAAW,IAoCtB,SACA,cAAC+B,EAAA,QAAD,CAAMP,MAAK,OAAMC,EAAOO,SAAb,IACTC,MAAOlC,EAAoBP,EAAV,UADnB,yBAIF,eAAC+B,EAAA,QAAD,WACE,cAACW,EAAA,QAAD,CACAC,MAAOlC,EACPmC,YAAarC,EAAU,cAAgB,YACvCyB,MAAOC,EAAOY,MACdC,aA5Ca,SAACC,GAAD,OAAWrC,EAAQqC,IA6ChCC,gBAAiBvB,EACjBwB,cAAc,SACd,cAACC,EAAA,QAAD,UACGC,OAAOC,KAAKzC,GAAO0C,KAAI,SAAAC,GAAG,OACzB3C,EAAM2C,GAAK/C,UAAUA,EACvB,eAACwB,EAAA,QAAD,CACAC,MAAOC,EAAOsB,KADd,UAGI,cAAChB,EAAA,QAAD,CAAMP,MAAOC,EAAOuB,SAApB,SAA+B7C,EAAM2C,GAAK7C,OAC1C,cAAC4B,EAAA,QAAD,CAAkBC,QAAS,kBAAIT,EAAWyB,IAA1C,SACE,cAACf,EAAA,QAAD,yBAHDe,GAKO,gBAOtB,IAAMrB,EAASwB,UAAWC,OAAO,CAC/BxB,UAAW,CACTyB,KAAM,EACNC,gBAAiB5D,EACjB6D,kBAAkB,GAClBzD,OAAOH,GAETmC,OAAO,CACL0B,eAAe,gBACfC,cAAc,MACdC,UAAU,KAEZxB,QAAQ,CACNyB,SAAS,GACTC,WAAW,OAEbrB,MAAM,CACJe,gBAAgB,QAChBO,gBAAgB,EAChBN,kBAAkB,GAClBO,aAAa,GACbC,eAAe,GACfJ,SAAS,IAEXV,KAAK,CACHK,gBAAgB5D,EAChBmE,gBAAgB,GAChBN,kBAAkB,GAClBO,aAAa,GACbL,cAAc,MACdO,WAAW,SACXR,eAAe,gBACfS,aAAa,IAEff,SAAS,CACPf,MAAM,QACNwB,SAAS,GACTC,WAAW,U","file":"static/js/app.ce5ff98b.chunk.js","sourcesContent":["export const theme={\r\n    bg:\"black\",\r\n    grey:\"#3A3D40\",\r\n    toDoBg:\"#6C5C60\",\r\n}","import { StatusBar } from 'expo-status-bar';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { \n  StyleSheet, \n  Text, \n  View,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  TextInput,\n  ScrollView, \n  TouchableNativeFeedbackComponent,\nDimensions} from 'react-native';\nimport { theme } from './colors';\nimport {useEffect, useState} from \"react\";\n\nconst STORAGE_KEY=\"@toDos\";\nconst windowHeight = Dimensions.get('window').height;\n\nexport default function App() {\n  const [working,setWorking]=useState(true);\n  const [text,setText]=useState(\"\");\n  const [toDos,setTodos]=useState({});\n  useEffect(()=>{\n    loadToDos();\n  },[]);\n  const travel=()=>setWorking(false);\n  const work=()=>setWorking(true);\n  const onChangeText=(payload)=>setText(payload);\n  const saveToDos=async (toSave)=>{\n    const jsonValue = JSON.stringify(toSave);\n    await AsyncStorage.setItem(STORAGE_KEY, jsonValue);\n  };\n  const loadToDos=async()=>{\n    const s = await AsyncStorage.getItem(STORAGE_KEY);\n    if(s){\n      setTodos(JSON.parse(s));\n    }\n  };\n  const addToDo=async ()=>{\n    if(text===\"\"){\n      return;\n    }\n    const newToDos={...toDos,[Date.now()]:{text,working},};\n    setTodos(newToDos);\n    await saveToDos(newToDos);\n    setText(\"\");\n  }\n  const deleteToDo=async(id)=>{\n    const newToDos={...toDos}\n    delete newToDos[id]\n    setTodos(newToDos);\n    await saveToDos(newToDos);\n  }\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n        <Text style={{...styles.btnText, \n          color:working ? \"white\" : theme.grey}}>Work</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n        <Text style={{...styles.btnText, \n          color:!working ? \"white\" : theme.grey}}>Travel</Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TextInput \n        value={text}\n        placeholder={working ? \"Add a To Do\" : \"Where to?\"} \n        style={styles.input} \n        onChangeText={onChangeText}\n        onSubmitEditing={addToDo}\n        returnKeyType=\"done\" />\n        <ScrollView>\n          {Object.keys(toDos).map(key=>(\n            toDos[key].working===working ?\n          <View \n          style={styles.toDo}\n          key={key}>\n              <Text style={styles.toDoText}>{toDos[key].text}</Text>\n              <TouchableOpacity onPress={()=>deleteToDo(key)}>\n                <Text>‚ùå</Text>\n              </TouchableOpacity>\n            </View> : null))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal:20,\n    height:windowHeight\n  },\n  header:{\n    justifyContent:\"space-between\",\n    flexDirection:\"row\",\n    marginTop:100,\n  },\n  btnText:{\n    fontSize:38,\n    fontWeight:'600',\n  },\n  input:{\n    backgroundColor:\"white\",\n    paddingVertical:8,\n    paddingHorizontal:10,\n    borderRadius:30,\n    marginVertical:20,\n    fontSize:17,\n  },\n  toDo:{\n    backgroundColor:theme.grey,\n    paddingVertical:20,\n    paddingHorizontal:20,\n    borderRadius:20,\n    flexDirection:\"row\",\n    alignItems:\"center\",\n    justifyContent:\"space-between\",\n    marginBottom:15,\n  },\n  toDoText:{\n    color:\"white\",\n    fontSize:16,\n    fontWeight:\"500\",\n  }\n});\n"],"sourceRoot":""}